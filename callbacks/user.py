from aiogram import Router, F, Bot
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from database.models import Category
from keyboards import cancel_mk, search_type_panel, categories
from keyboards.button_text import ButtonText as BT
from states import AddRecipeForm, SearchRecipeForm
from utils import get_main_kb

router = Router(name='user_callbacks')


@router.message(F.text == BT.MAIN_MENU)
@router.message(Command('menu'))
async def menu(message: Message, state: FSMContext):
    tg_id = message.from_user.id
    await state.clear()
    await message.answer('üè† –í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=get_main_kb(tg_id))


@router.callback_query(AddRecipeForm.category, F.data.startswith('select_category_to_add_recipe_'))
async def choose_category_to_add_recipe(callback: CallbackQuery, state: FSMContext):
    category_id = callback.data.split('_')[-1]
    category = await Category.get(id=category_id)
    await callback.answer(f'–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {category.title}')
    await state.update_data(category=category)
    await state.set_state(AddRecipeForm.recipe)
    await callback.message.answer(f'–û—Ç–ª–∏—á–Ω–æ, –≤—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é <b>{category.title}</b>.\n'
                                  f'–¢–µ–ø–µ—Ä—å —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ (–ü—Ä–æ–±–µ–ª—ã –ø–æ—Å–ª–µ —Å–∫–æ–±–æ–∫ —Å–æ–±–ª—é–¥–∞—Ç—å!):\n'
                                  f'---------------------------------------------\n'
                                  f'1) –ù–∞–∑–≤–∞–Ω–∏–µ\n'
                                  f'2) –°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é —Å —Ä–µ—Ü–µ–ø—Ç–æ–º –≤ https://telegra.ph \n'
                                  f'---------------------------------------------\n'
                                  f'–ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ —Ç–µ–ª–µ–≥—Ä–∞—Ñ - https://uchet-jkh.ru/i/telegraf-dlya-telegram-cto-eto-i-kak-ono-rabotaet/', reply_markup=cancel_mk)


@router.callback_query(SearchRecipeForm.category, F.data.startswith('select_category_to_search_recipe_'))
async def choose_category_to_search_recipe(callback: CallbackQuery, state: FSMContext):
    category_id = callback.data.split('_')[-1]

    if category_id.isdigit():
        category = await Category.get(id=category_id)
        await callback.answer(f'–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é {category.title}')
        await state.update_data(category=category)
    elif category_id == 'all':
        await state.update_data(category=None)

    await callback.message.edit_text('–ö–∞–∫ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –ø–æ–∏—Å–∫?')
    await callback.message.edit_reply_markup(reply_markup=search_type_panel)
    await state.set_state(SearchRecipeForm.search_type)


@router.callback_query(SearchRecipeForm.search_type, F.data == 'back_to_choose_category')
async def back_to_choose_category(callback: CallbackQuery, state: FSMContext):
    await callback.answer('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –∏—Å–∫–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç:')
    await callback.message.edit_reply_markup(reply_markup=await categories('select_category_to_search_recipe_', show_all_recipes=True))
    await state.set_state(SearchRecipeForm.category)


@router.callback_query(SearchRecipeForm.search_type, F.data.startswith('choose_search_type_by_'))
async def choose_search_type(callback: CallbackQuery, state: FSMContext, bot: Bot):
    search_type = callback.data.split('_')[-1]

    if search_type == 'name':
        await callback.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é.')
        await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞', reply_markup=cancel_mk)

    elif search_type == 'author':
        await callback.answer(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–∏—Å–∫ –ø–æ –∞–≤—Ç–æ—Ä—É')
        await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–ø—Ä–æ—Å.', reply_markup=cancel_mk)

    else:
        # search_type = all
        await callback.answer('–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø–æ–∏—Å–∫ –ø–æ —Å–∞–º—ã–º –Ω–µ–¥–∞–≤–Ω–∏–º —Ä–µ—Ü–µ–ø—Ç–∞–º.')
        await state.update_data(result='latest', search_type=search_type)
        await state.set_state(SearchRecipeForm.result)
        return

    await state.set_state(SearchRecipeForm.get_user_input)
    await state.update_data(search_type=search_type)



